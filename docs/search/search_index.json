{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentaci\u00f3n de aplicaciones con MarkDown","text":"<p>En este tema exploraremos c\u00f3mo utilizar Markdown para crear documentaci\u00f3n clara, estructurada y profesional para tus proyectos de desarrollo. </p> <p>Markdown es un lenguaje de marcado ligero y sencillo que permite generar documentos atractivos con una sintaxis m\u00ednima. Aprender\u00e1s desde conceptos b\u00e1sicos hasta funcionalidades avanzadas, as\u00ed como las mejores pr\u00e1cticas para integrarlo en tus proyectos y herramientas.</p> <p>La documentaci\u00f3n efectiva no solo mejora la comunicaci\u00f3n dentro de los equipos, sino que tambi\u00e9n facilita la comprensi\u00f3n y el mantenimiento del software a lo largo del tiempo. </p> <p>Acomp\u00e1\u00f1anos en este recorrido por Markdown y descubre c\u00f3mo convertirte en un experto en la creaci\u00f3n de documentaci\u00f3n t\u00e9cnica de calidad.</p>"},{"location":"Tema1/","title":"\ud83e\udde9 TEMA 1 \u2014 Introducci\u00f3 als frameworks PHP i a Symfony","text":""},{"location":"Tema1/#1-que-es-un-framework","title":"1. Qu\u00e8 \u00e9s un framework?","text":"<p>Un framework \u00e9s una eina que proporciona un conjunt d\u2019elements i regles per a facilitar el desenvolupament d\u2019aplicacions web. En el cas dels frameworks PHP, ofereixen:</p> <ul> <li>Una estructura de treball predefinida (normalment basada en el patr\u00f3 MVC).  </li> <li>Eines per a crear i gestionar models de dades, controladors i vistes.  </li> <li>Suport per a rutes, injecci\u00f3 de depend\u00e8ncies, seguretat i testejos autom\u00e0tics.  </li> </ul> <p>Aix\u00f2 permet que el codi siga m\u00e9s organitzat, modular i f\u00e0cil de mantindre.</p>"},{"location":"Tema1/#2-exemples-de-frameworks-php","title":"2. Exemples de frameworks PHP","text":"<p>Actualment hi ha molts frameworks PHP disponibles. A continuaci\u00f3 tens una comparativa dels m\u00e9s coneguts:</p> Framework Any Caracter\u00edstiques principals Laravel 2011 Elegant, simple i amb gran comunitat. Ideal per a projectes nous. Symfony 2005 Molt estructurat, modular i estable. Segueix bones pr\u00e0ctiques de programaci\u00f3. CodeIgniter 2006 Lleuger i r\u00e0pid d\u2019aprendre, per\u00f2 m\u00e9s limitat. Phalcon 2012 Extremadament r\u00e0pid i flexible, pot funcionar com a microframework. CakePHP 2005 Senzill i amb una comunitat \u00e0mplia. Zend 2006 Robust i orientat a empreses, encara que menys utilitzat hui dia. <p>\u27a1\ufe0f Tots ells segueixen el patr\u00f3 MVC i permeten el desenvolupament tant de webs completes com de serveis RESTful.</p>"},{"location":"Tema1/#3-quin-triar","title":"3. Quin triar?","text":"<p>Dep\u00e9n de les necessitats del projecte i de l\u2019experi\u00e8ncia de l\u2019equip:</p> <ul> <li>Projectes senzills o d\u2019aprenentatge: CodeIgniter o CakePHP.  </li> <li>Projectes professionals o de llarga duraci\u00f3: Symfony o Laravel.  </li> </ul> <p>\ud83e\udde0 Symfony \u00e9s m\u00e9s complex al principi, per\u00f2 proporciona una base s\u00f2lida i escalable.</p>"},{"location":"Tema1/#4-per-que-triar-symfony","title":"4. Per qu\u00e8 triar Symfony?","text":"<p>Symfony \u00e9s un framework modern, segur i molt complet. Els seus principals avantatges s\u00f3n:</p> <ul> <li>\ud83e\uddf1 Estructura robusta i modular. </li> <li>\ud83d\udd53 Versions LTS (Long Term Support) amb manteniment garantit.  </li> <li>\ud83c\udf0d Gran comunitat i documentaci\u00f3 oficial excel\u00b7lent.  </li> <li>\ud83d\udca1 Bones pr\u00e0ctiques integrades, seguint est\u00e0ndards PSR.  </li> <li>\ud83d\udd0c Integraci\u00f3 amb llibreries de tercers com:</li> <li>Twig \u2192 motor de plantilles per a generar vistes.</li> <li>Doctrine \u2192 ORM per a treballar amb bases de dades com a objectes.</li> </ul>"},{"location":"Tema1/#5-recursos-necessaris","title":"5. Recursos necessaris","text":"<p>Per treballar amb Symfony 6.1 o superior, cal tindre instal\u00b7lats els seg\u00fcents components:</p> Component Descripci\u00f3 Servidor web Apache o Nginx amb suport per a PHP 8.1+ Base de dades MariaDB o MySQL PHP Versi\u00f3 8.1 o posterior Composer Gestor de depend\u00e8ncies per a PHP Symfony CLI Eina oficial per a crear i gestionar projectes IDE / Editor VS Code, PHPStorm o qualsevol altre amb suport per a PHP Sistema operatiu Ubuntu 22.04 (recomanat) o Windows amb WSL2"},{"location":"Tema1/#6-installacio-basica-resum","title":"6. Instal\u00b7laci\u00f3 b\u00e0sica (resum)","text":"<p>Per crear un nou projecte Symfony amb l\u2019esquelet complet:</p> <pre><code>composer create-project symfony/website-skeleton nom_projecte\n</code></pre> <p>O per crear un projecte lleuger, sense bundles innecessaris:</p> <pre><code>composer create-project symfony/skeleton nom_projecte\n</code></pre> <p>Despr\u00e9s pots iniciar el servidor intern de Symfony amb:</p> <pre><code>symfony serve\n</code></pre>"},{"location":"Tema1/#7-conclusio","title":"7. Conclusi\u00f3","text":"<p>Symfony \u00e9s una de les millors opcions per a aprendre desenvolupament web en entorn servidor amb PHP. Et permet entendre com funciona el patr\u00f3 MVC, treballar amb bones pr\u00e0ctiques i construir aplicacions professionals, segures i escalables.</p> <p>\ud83d\udcac En resum: Symfony \u00e9s exigent al principi, per\u00f2 t\u2019ensenya a programar \u201cb\u00e9\u201d.</p> <p>Refer\u00e8ncies: - Documentaci\u00f3 oficial de Symfony - Releases Symfony</p>"},{"location":"Tema2/","title":"\ud83e\udde9 TEMA 2: El patr\u00f3 MVC en Symfony","text":""},{"location":"Tema2/#1-que-es-el-patro-mvc","title":"1\ufe0f\u20e3 Qu\u00e8 \u00e9s el patr\u00f3 MVC?","text":"<p>MVC s\u00f3n les sigles de Model - Vista - Controlador, i \u00e9s el patr\u00f3 d\u2019arquitectura m\u00e9s utilitzat en el desenvolupament web.</p> <p>L\u2019objectiu \u00e9s separar les responsabilitats del codi per a aconseguir aplicacions m\u00e9s netes, modulars i f\u00e0cils de mantenir.</p> Component Descripci\u00f3 Exemple Model Gestiona les dades i la l\u00f2gica de negoci. Representa la informaci\u00f3 que utilitza l\u2019aplicaci\u00f3. Entitats de Doctrine com <code>Contacte</code>, <code>Usuari</code>, <code>Llibre</code>... Vista S\u2019encarrega de mostrar la informaci\u00f3 a l\u2019usuari (interf\u00edcie HTML). Fitxers <code>.html.twig</code> dins la carpeta <code>templates/</code> Controlador Gestiona les peticions de l\u2019usuari, interactua amb el model i tria quina vista mostrar. Classes dins <code>src/Controller/</code>"},{"location":"Tema2/#avantatges-del-patro-mvc","title":"\ud83d\udfe2 Avantatges del patr\u00f3 MVC","text":"<ul> <li>Codi m\u00e9s estructurat i mantenible.  </li> <li>Facilita el treball en equip (programador \u2194 dissenyador).  </li> <li>Permet reutilitzar components i millorar la seguretat.  </li> </ul>"},{"location":"Tema2/#2-controladors-i-rutes-en-symfony","title":"2\ufe0f\u20e3 Controladors i rutes en Symfony","text":"<p>Per a crear una p\u00e0gina en Symfony calen dos elements principals:</p> <ol> <li>Una ruta \u2192 defineix l\u2019URL que activar\u00e0 el controlador.  </li> <li>Un controlador \u2192 \u00e9s la classe que cont\u00e9 el codi que es vol executar.</li> </ol>"},{"location":"Tema2/#exemple-basic","title":"\ud83d\udd39 Exemple b\u00e0sic","text":"<p>Fitxer: <code>src/Controller/IniciController.php</code></p> <p>```php &lt;?php namespace App\\Controller;</p> <p>use Symfony\\Component\\HttpFoundation\\Response; use Symfony\\Component\\Routing\\Annotation\\Route;</p> <p>class IniciController {     #[Route('/', name: 'inici')]     public function inici(): Response     {         return new Response('Benvingut/da al web de contactes');     } }</p>"}]}